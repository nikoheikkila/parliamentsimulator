$(document).ready(function () {

    /**
     * Constants
     */
    var parties = $('.party');
    var valuesList = <%= Value.all.to_json %>
    var pairings = <%= Pairing.all.to_json %>;

    /**
     * Event listeners
     */

    /**
     * Init function setups the game and necessary elements.
     */

    var randomValuePosition = function() {
        var num = Math.floor((Math.random() * 56));
        return {name: valuesList[pairings[num].value_id-1].name, id: pairings[num].value_id, position: pairings[num].position};
    }

    var init = function () {

        console.log("Initializing game...");
        aloitusArvot();
        var pValues = $('.value');
        if (pValues.length > 0) {

            pValues.draggable();
            parties.droppable({
                drop: valueDropped
            });

        } else {

            console.log("No values set!");
        }

    };
    var aloitusArvot = function () {
        for (var i = 0; i < 10; i++) {
            arvoKehiin(randomValuePosition());
        };
    }

    var arvoKehiin = function (sisalto) {
        var pArvot = $('.arvot')
            .append($('<li></li>')
                .addClass("value")
                .attr("data-id", sisalto.id)
                .attr("data-position", String(sisalto.position))
                .text(sisalto.name + " " + sisalto.position));
    }
    /**
     * Call when value is dropped on party image
     */
    var valueDropped = function(event, ui) {
        var party_id = event.target.id;
        var value_id = ui.draggable.data("id");
        var value_position = ui.draggable.data("position");
        if (partyAgreesWith(value_id,party_id,value_position))
            changeScore(1);
        else
            changeScore(-1);
    };

    function partyAgreesWith(value_id, party_id, position) {
        console.log(value_id + " " + party_id + " " + position);
        for(var i = 0; i < pairings.length; i++){
            if (pairings[i].value_id == value_id && pairings[i].party_id == party_id && pairings[i].position == position){
                console.log(value_id);
                return true;
            }
        }
        return false;
    };

    function timeOut() {

        // End game and display something nice
        return false;
    };

    function changeScore(points) {

        // Increase or decrease scores
        $('#score').text(points);
        return false;
    };

    try {
        init();
    } catch (err) {
        console.log("Setup failed. Reason: " + err);
    }

});
